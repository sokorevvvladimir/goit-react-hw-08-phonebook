{"version":3,"file":"static/js/215.52dbadb1.chunk.js","mappings":"kUAUMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,+DAIZE,GAA2BF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,qCA2H9B,EAxHoB,WAClB,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GADWC,EAAAA,EAAAA,MAATC,KAER,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UACxB,GAAsDV,EAAAA,EAAAA,WAAS,GAA/D,eAAOW,EAAP,KAA4BC,EAA5B,KACA,GAAwCZ,EAAAA,EAAAA,UAAS,IAAjD,eAAOa,EAAP,KAAqBC,EAArB,KACA,GAAoDd,EAAAA,EAAAA,WAAS,GAA7D,eAAOe,EAAP,KAA2BC,EAA3B,KACA,GAAwDhB,EAAAA,EAAAA,WAAS,GAAjE,eAAOiB,EAAP,KAA6BC,EAA7B,KAYMC,EAAe,SAAAZ,GACnB,GAXiB,SAAAA,GACb,OAAOF,EAASe,MAClB,qBAAGnB,KAAgBoB,gBAAkBd,EAAKN,KAAKoB,iBAS7CC,CAAWf,GAGb,OAFAO,EAAgBP,EAAKN,WACrBe,GAAsB,IAPA,SAAAT,GACxB,OAAOF,EAASe,MAAK,qBAAGjB,SAAwBI,EAAKJ,UASjDoB,CAAkBhB,IAKtBE,EAAcF,GACdK,GAAuB,GACvBE,EAAgBP,EAAKN,OANnBiB,GAAwB,IAUtBM,EAAiB,SAAAC,GACrB,MAAwBA,EAAEC,cAAlBzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MACd,OAAQ1B,GACN,IAAK,OACHC,EAAQyB,GACR,MACF,IAAK,SACHvB,EAAUuB,GACV,MACF,QACE,SAUAC,EAAQ,WACZ1B,EAAQ,IACRE,EAAU,KAGZ,OACE,iCACE,UAACN,EAAD,CAA0B+B,SAAS,aAAnC,WACC,UAACC,EAAA,EAAD,CAAOC,GAAG,UAAUC,QAAS,kBAAMpB,GAAuB,IAAQqB,KAAMtB,EAAqBuB,MAAO,IAAMC,UAAQ,EAAlH,WACC,UAACL,EAAA,SAAD,YAAc,mBAAQM,UAAU,UAAlB,uBAA6C,6CACzD,SAACN,EAAA,OAAD,oBAAgBjB,EAAhB,kCAEF,UAACiB,EAAA,EAAD,CAAOC,GAAG,SAASC,QAAS,kBAAMhB,GAAsB,IAAQiB,KAAMlB,EAAoBmB,MAAO,IAAMC,UAAQ,EAA/G,WACA,UAACL,EAAA,SAAD,YAAc,mBAAQM,UAAU,UAAlB,uBAA6C,6CACzD,SAACN,EAAA,OAAD,oBAAgBjB,EAAhB,uCAEF,UAACiB,EAAA,EAAD,CAAOC,GAAG,SAASC,QAAS,kBAAMd,GAAwB,IAAQe,KAAMhB,EAAsBiB,MAAO,IAAMC,UAAQ,EAAnH,WACA,UAACL,EAAA,SAAD,YAAc,mBAAQM,UAAU,UAAlB,uBAA6C,6CACzD,SAACN,EAAA,OAAD,iFAGN,UAACO,EAAA,EAAD,CAAMC,SA3BgB,SAAAb,GACtBA,EAAEc,iBACFpB,EAAa,CAAElB,KAAAA,EAAME,OAAAA,IACrByB,KAwBA,WACE,UAACS,EAAA,QAAD,CAAYD,UAAU,OAAOI,UAAU,gBAAvC,WACE,SAACH,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACII,YAAY,aACZC,KAAK,OACLzC,KAAK,OACL0B,MAAO1B,EACP0C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUtB,QAGhB,UAACa,EAAA,QAAD,CAAYD,UAAU,OAAOI,UAAU,kBAAvC,WACE,SAACH,EAAA,QAAD,qBACA,SAACA,EAAA,UAAD,CACEI,YAAY,eACVC,KAAK,MACLzC,KAAK,SACL0B,MAAOxB,EACPwC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUtB,QAGhB,gBAAKY,UAAU,eAAf,UACE,SAACzC,EAAD,CAAcoD,QAAQ,YAAYL,KAAK,SAASM,SAAUtC,EAA1D,SACGA,GACC,SAAC,KAAD,CAAMuC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAEzC,yB,oBChICC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,QC2BxC,EArBe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACXF,GAASG,EAAAA,EAAAA,IAAYL,GAU3B,OAJAM,EAAAA,EAAAA,IAA0BJ,EAAQ,CAChCK,KAAiB,KAAXL,KAIN,UAACjB,EAAA,QAAD,CAAYD,UAAU,OAAOI,UAAU,gBAAvC,WACA,SAACH,EAAA,QAAD,qCAEE,SAACA,EAAA,UAAD,CAAcK,KAAK,OAAOf,MAAO2B,EAAQR,SAZtB,SAAArB,GACrB8B,GAASK,EAAAA,EAAAA,IAAanC,EAAEC,cAAcC,e,UCTpCkC,EAAqBjE,EAAAA,GAAAA,EAAH,6CAQxB,EAJqB,WACnB,OAAO,SAACiE,EAAD,mC,oBCSHC,EAAKlE,EAAAA,GAAAA,GAAH,qKAWFmE,GAAanE,EAAAA,EAAAA,IAAOoE,EAAAA,EAAPpE,CAAH,0EAKVqE,GAAkBrE,EAAAA,EAAAA,IAAOoE,EAAAA,EAAAA,MAAPpE,CAAH,+FAMfsE,GAAiBtE,EAAAA,EAAAA,IAAOoE,EAAAA,EAAAA,KAAPpE,CAAH,sJAUduE,GAAiBvE,EAAAA,EAAAA,IAAOoE,EAAAA,EAAAA,KAAPpE,CAAH,yCAGdD,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,0CAGZwE,GAAoBxE,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,qFA0IvB,EArIiB,SAAC,GAA0F,IAAxFyE,EAAuF,EAAvFA,GAAIpE,EAAmF,EAAnFA,KAAME,EAA6E,EAA7EA,OAAQmE,EAAqE,EAArEA,+BAAgCC,EAAqC,EAArCA,+BAC9DhB,GAAWC,EAAAA,EAAAA,MACjB,GAAmDgB,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBhE,UACxB,GAAuCiE,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBlE,EAAxB,KAAwBA,UACxB,GAA8BV,EAAAA,EAAAA,UAASC,GAAvC,eAAO4E,EAAP,KAAgBC,EAAhB,KACA,GAAkC9E,EAAAA,EAAAA,UAASG,GAA3C,eAAO4E,EAAP,KAAkBC,EAAlB,KACC,GAA8BhF,EAAAA,EAAAA,WAAS,GAAvC,eAAOiF,EAAP,KAAgBC,EAAhB,KAEKC,EAAc,WAClBD,GAAYD,IAWRzD,EAAiB,SAAAC,GACrB,MAAwBA,EAAEC,cAAlBzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MACd,OAAQ1B,GACN,IAAK,OACH6E,EAAWnD,GACX,MACF,IAAK,SACHqD,EAAarD,GACb,MACF,QACE,SASN,OACE,iCACI,UAACyD,EAAA,EAAD,CAAOnD,KAAMgD,EAASI,OAAQF,EAAaG,KAAK,KAClD,kBAAgB,gCACZC,UAAQ,EAFV,WAGE,SAACH,EAAA,SAAD,CAAcI,aAAW,EAAzB,UACE,SAACJ,EAAA,QAAD,CAAaf,GAAG,gCAAhB,qBAIF,SAACe,EAAA,OAAD,WACA,UAAC/C,EAAA,EAAD,CAAMC,SAhBU,SAAAb,GACtBA,EAAEc,iBAvBiB,SAAAhC,GACnB,IAAQ8D,EAAyC9D,EAAzC8D,GAAapE,EAA4BM,EAArCsE,QAA0B1E,EAAWI,EAAtBwE,UAE3BH,EAAc,CAAEP,GAAAA,EAAIpE,KAAAA,EAAME,OAAAA,IAC1BoE,GAA+B,GAoB/BpD,CAAa,CAAEkD,GAAAA,EAAIQ,QAAAA,EAASE,UAAAA,KActB,WACE,UAAC1C,EAAA,QAAD,CAAYD,UAAU,OAAOI,UAAU,gBAAvC,WACA,SAACH,EAAA,QAAD,oBAEE,SAACA,EAAA,UAAD,CACEK,KAAK,OACLzC,KAAK,OACL0B,MAAOkD,EACPlC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUtB,QAGd,UAACa,EAAA,QAAD,CAAYD,UAAU,OAAOI,UAAU,kBAAvC,WACA,SAACH,EAAA,QAAD,sBAEE,SAACA,EAAA,UAAD,CACEK,KAAK,MACLzC,KAAK,SACL0B,MAAOoD,EACPpC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUtB,QAGd,gBAAKY,UAAU,eAAf,UACA,SAACgC,EAAD,CAAmB1B,KAAK,SAASM,SAAUtC,EAA3C,SACGA,GACC,SAAC,KAAD,CAAMuC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAEzC,kBAUV,SAACW,EAAD,WACE,SAACC,EAAD,CAAYhC,GAAG,OAAf,UACE,UAACmC,EAAD,YACE,UAACD,EAAD,WAAkBhE,EAAlB,QACA,SAACkE,EAAD,UAAiBhE,KACjB,4BAAK,SAAC,EAAD,CAAc4C,QAAQ,gBAAgBL,KAAK,SAAS+C,QAASN,EAA7D,mBAGL,SAACtF,EAAA,EAAD,CACEkD,QAAQ,gBACVL,KAAK,SACL+C,QAAS,WACPlC,GAASmC,EAAAA,EAAAA,OACTjB,EAAcJ,GACdC,GAA+B,IAEjCtB,SAAU0B,EARV,SAUCA,GACC,SAAC,KAAD,CAAMzB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAEzC,yB,UCzKRwC,EAAM/F,EAAAA,GAAAA,IAAH,mNAqBT,EAR0B,WACxB,OACE,SAAC+F,EAAD,WACE,SAACC,EAAA,EAAD,CAASC,UAAU,OAAO9C,QAAQ,YCRlC+C,EAAWlG,EAAAA,GAAAA,GAAH,oDAIRE,GAA2BF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,qCAsD9B,EAnDa,WACX,OAA6BU,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,KAAMwF,EAAd,EAAcA,WACR1F,EAAWE,EACX+C,GAASG,EAAAA,EAAAA,IAAYL,GAC3B,GAA4DpD,EAAAA,EAAAA,WAAS,GAArE,eAAOgG,EAAP,KAA+BC,EAA/B,KACF,GAAwDjG,EAAAA,EAAAA,WAAS,GAAjE,eAAOkG,EAAP,KAA6BC,EAA7B,KASQC,EAPsB,WAC1B,IAAMC,EAAmB/C,EAAOjC,cAChC,cAAOhB,QAAP,IAAOA,OAAP,EAAOA,EAAUiD,QAAO,SAAAgD,GAAO,OAC7BA,EAAQrG,KAAKoB,cAAckF,SAASF,MAIfG,GAEnBlC,EAAiC,SAAAmC,GACrCR,EAA0BQ,IAGtBlC,EAAiC,SAAAkC,GACrCN,EAAwBM,IAG1B,OACE,iCACE,SAAC,EAAD,CAA0B5E,SAAS,aAAnC,UACC,UAACC,EAAA,EAAD,CAAOC,GAAG,UAAUC,QAAS,kBAAMiE,GAA0B,IAAQhE,KAAM+D,EAAwB9D,MAAO,IAAMC,UAAQ,EAAxH,WACC,UAACL,EAAA,SAAD,YAAc,mBAAQM,UAAU,UAAlB,uBAA6C,6CACzD,SAACN,EAAA,OAAD,UAAa,sCAGjB,SAAC,EAAD,CAA0BD,SAAS,aAAnC,UACC,UAACC,EAAA,EAAD,CAAOC,GAAG,UAAUC,QAAS,kBAAMmE,GAAwB,IAAQlE,KAAMiE,EAAsBhE,MAAO,IAAMC,UAAQ,EAApH,WACC,UAACL,EAAA,SAAD,YAAc,mBAAQM,UAAU,UAAlB,uBAA6C,6CACzD,SAACN,EAAA,OAAD,UAAa,2BAGnB,UAACgE,EAAD,WACGC,IAAc,SAAC,EAAD,IACd1F,IACE0F,GACDK,EAAiBM,KAAI,SAAAJ,GACnB,OAAO,SAAC,GAAD,kBAA+BA,GAA/B,IAAwChC,+BAAgCA,EAAgCC,+BAAiCA,IAA1H+B,EAAQjC,SAE/BhE,GAAgC,IAApBA,EAASsG,UAAkBZ,IAAc,SAAC,EAAD,WCjD9D,EAVwB,WAEtB,OAAO,iCACH,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,KACF,SAAC,EAAD","sources":["components/Form/Form.jsx","redux/filter/filterSelectors.js","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/ListItem/ListItem.jsx","components/MainLoaderSpinner/MainLoaderSpinner.jsx","components/List/List.jsx","pages/MainContentPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useCreateContactMutation } from '../../redux/contactsSlice';\nimport { useGetAllContactsQuery } from '../../redux/contactsSlice';\nimport { Oval } from 'react-loader-spinner';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport ToastContainer from 'react-bootstrap/ToastContainer';\nimport styled from 'styled-components';\n\nconst StyledButton = styled(Button)`\ndisplay: flex;\njustify-content: center`;\n\nconst ToastContainerWithZindex = styled(ToastContainer)`\nz-index: 999;`;\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useGetAllContactsQuery();\n  const contacts = data;\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const [contactCreatedToast, setContactCreatedToast] = useState(false);\n  const [nameForToast, setNameForToast] = useState('');\n  const [onSameNameForToast, setOnSameNameForToast] = useState(false);\n  const [onSameNumberForToast, setOnSameNumberForToast] = useState(false);\n  \n  const onSameName = data => {\n        return contacts.find(\n      ({ name }) => name.toLowerCase() === data.name.toLowerCase()\n    );\n  };\n\n  const onSamePhoneNumber = data => {\n    return contacts.find(({ number }) => number === data.number);\n  };\n\n  const onFormSubmit = data => {\n    if (onSameName(data)) {\n      setNameForToast(data.name);\n      setOnSameNameForToast(true);\n      return;\n    }\n    if (onSamePhoneNumber(data)) {\n      setOnSameNumberForToast(true);\n      return;\n    }\n\n    createContact(data);\n    setContactCreatedToast(true);\n    setNameForToast(data.name);\n    return;\n  };\n\n  const onInputHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    onFormSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <ToastContainerWithZindex position=\"bottom-end\">\n       <Toast bg=\"success\" onClose={() => setContactCreatedToast(false)} show={contactCreatedToast} delay={3000} autohide>\n        <Toast.Header><strong className=\"me-auto\">Success!</strong><small>Just now!</small></Toast.Header>\n          <Toast.Body>{`${nameForToast} added to your contacts!`}</Toast.Body>\n        </Toast>\n        <Toast bg=\"danger\" onClose={() => setOnSameNameForToast(false)} show={onSameNameForToast} delay={3000} autohide>\n        <Toast.Header><strong className=\"me-auto\">Warning!</strong><small>Just now!</small></Toast.Header>\n          <Toast.Body>{`${nameForToast} is already in your contacts.`}</Toast.Body>\n        </Toast>\n        <Toast bg=\"danger\" onClose={() => setOnSameNumberForToast(false)} show={onSameNumberForToast} delay={3000} autohide>\n        <Toast.Header><strong className=\"me-auto\">Warning!</strong><small>Just now!</small></Toast.Header>\n          <Toast.Body>{`Contact with this phone number is already in your contacts.`}</Toast.Body>\n        </Toast>\n        </ToastContainerWithZindex>\n    <Form onSubmit={onSubmitHandler}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n            placeholder=\"Enter name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={onInputHandler}\n          />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n        <Form.Label>Phone</Form.Label>\n        <Form.Control\n          placeholder=\"Phone number\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={onInputHandler}\n          />\n      </Form.Group>\n      <div className=\"d-grid gap-2\">\n        <StyledButton variant=\"secondary\" type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <Oval color=\"#ffffff\" height={20} width={20} />\n          ) : (\n            'Add contact'\n          )}\n        </StyledButton>\n        </div>\n      </Form>\n      </>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filterSlice';\nimport { getFilter } from '../../redux/filter/filterSelectors';\nimport { useGetContactsByNameQuery } from 'redux/contactsSlice';\nimport Form from 'react-bootstrap/Form';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onInputHandler = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  useGetContactsByNameQuery(filter, {\n    skip: filter === '',\n  });\n\n  return (\n    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    <Form.Label>Find contacts by name</Form.Label>\n      \n      <Form.Control type=\"text\" value={filter} onChange={onInputHandler} />\n    </Form.Group>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst StyledNotification = styled.p`\n  font-weight: 500;\n`;\n\nconst Notification = () => {\n  return <StyledNotification>Nothing here so far</StyledNotification>;\n};\n\nexport default Notification;\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { clearFilter } from 'redux/filter/filterSlice';\nimport {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from 'redux/contactsSlice';\nimport { Oval } from 'react-loader-spinner';\nimport PropTypes from 'prop-types'; \nimport Modal from 'react-bootstrap/Modal';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nconst Li = styled.li`\nlist-style: none;\n  font-size: 18px;\n  font-weight: 500;\n  color: #ffffff;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n  )\n`;\nconst StyledCard = styled(Card)`\n@media (max-width: 767px) {\n  font-size: 14px;\n}`;\n\nconst StyledCardTitle = styled(Card.Title)`\nmargin-bottom: 0;\n\n@media (max-width: 767px) {\n  font-size: 14px;\n}`;\nconst StyledCardBody = styled(Card.Body)`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n\n@media (max-width: 767px) {\n  padding: 5px 5px;\n}\n`;\n\nconst StyledCardText = styled(Card.Text)`\nmargin-bottom: 0;`;\n\nconst StyledButton = styled(Button)`\nmargin-right: 1rem`;\n\nconst StyledModalButton = styled(Button)`\ndisplay: flex;\njustify-content: center;\nalign-items: center`;\n\nconst ListItem = ({ id, name, number, passDeletedContactInfoForToast, passUpdatedContactInfoForToast }) => {\n  const dispatch = useDispatch();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const [updateContact, { isLoading }] = useUpdateContactMutation();\n  const [newName, setNewName] = useState(name);\n  const [newNumber, setNewNumber] = useState(number);\n   const [isShown, setIsshown] = useState(false);\n  \n  const toggleModal = () => {\n    setIsshown(!isShown);\n  };\n \n  const onFormSubmit = data => {\n    const { id, newName: name, newNumber: number } = data;\n\n    updateContact({ id, name, number });\n    passUpdatedContactInfoForToast(true);\n    return;\n  };\n\n  const onInputHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setNewName(value);\n        break;\n      case 'number':\n        setNewNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    onFormSubmit({ id, newName, newNumber });\n  };\n\n  return (\n    <>      \n        <Modal show={isShown} onHide={toggleModal} size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n          centered>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n          Edit\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n            <Form.Label>Name</Form.Label>\n              \n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={newName}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={onInputHandler}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n            <Form.Label>Number</Form.Label>\n              \n              <Form.Control\n                type=\"tel\"\n                name=\"number\"\n                value={newNumber}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={onInputHandler}\n              />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n            <StyledModalButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? (\n                <Oval color=\"#ffffff\" height={20} width={20} />\n              ) : (\n                'OK'\n              )}\n              </StyledModalButton>\n              </div>\n            </Form>\n          </Modal.Body> \n        </Modal>\n \n      \n      \n      <Li>\n        <StyledCard bg='info'>\n          <StyledCardBody >\n            <StyledCardTitle>{name}:</StyledCardTitle>\n            <StyledCardText>{number}</StyledCardText>\n            <div><StyledButton variant=\"outline-light\" type=\"button\" onClick={toggleModal}>\n            Edit\n          </StyledButton>\n            <Button\n              variant=\"outline-light\"\n            type=\"button\"\n            onClick={() => {\n              dispatch(clearFilter());\n              deleteContact(id);\n              passDeletedContactInfoForToast(true);\n            }}\n            disabled={isDeleting}\n          >\n            {isDeleting ? (\n              <Oval color=\"#25515a\" height={20} width={20} />\n            ) : (\n              'Delete'\n            )}\n              </Button>\n              </div>\n          </StyledCardBody>\n        </StyledCard>\n       </Li>\n      \n    </>\n  );\n};\n\nListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  passDeletedContactInfoForToast: PropTypes.func.isRequired,\n  passUpdatedContactInfoForToast: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n\n  // @media (min-width: 769px) {\n  //   width: 80%;\n  // }\n  // @media (min-width: 1024px) {\n  //   width: 100%;\n  }\n`;\n\nconst MainLoaderSpinner = () => {\n  return (\n    <Div>\n      <Spinner animation=\"grow\" variant=\"info\" />\n    </Div>\n  );\n};\n\nexport default MainLoaderSpinner;\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Notification from '../Notification';\nimport { getFilter } from '../../redux/filter/filterSelectors';\nimport { useGetAllContactsQuery } from 'redux/contactsSlice';\nimport ListItem from 'components/ListItem';\nimport MainLoaderSpinner from 'components/MainLoaderSpinner';\nimport Toast from 'react-bootstrap/Toast';\nimport ToastContainer from 'react-bootstrap/ToastContainer';\n\nconst StyledUl = styled.ul`\n  padding-inline-start: 0;\n`;\n\nconst ToastContainerWithZindex = styled(ToastContainer)`\nz-index: 999;`;\n\nconst List = () => {\n  const { data, isFetching } = useGetAllContactsQuery();\n  const contacts = data;\n  const filter = useSelector(getFilter);\n  const [deletedContactForToast, setDeletedContactForToast] = useState(false);\nconst [shouldUpdateForToast, setShouldUpdateForToast] = useState(false);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  const passDeletedContactInfoForToast = info => { \n    setDeletedContactForToast(info);\n  };\n\n  const passUpdatedContactInfoForToast = info => {\n    setShouldUpdateForToast(info);\n  }\n\n  return (\n    <>\n      <ToastContainerWithZindex position=\"bottom-end\">\n       <Toast bg=\"success\" onClose={() => setDeletedContactForToast(false)} show={deletedContactForToast} delay={3000} autohide>\n        <Toast.Header><strong className=\"me-auto\">Success!</strong><small>Just now!</small></Toast.Header>\n          <Toast.Body>{'Deleted from your contacts!'}</Toast.Body>\n        </Toast>\n      </ToastContainerWithZindex>\n      <ToastContainerWithZindex position=\"bottom-end\">\n       <Toast bg=\"success\" onClose={() => setShouldUpdateForToast(false)} show={shouldUpdateForToast} delay={3000} autohide>\n        <Toast.Header><strong className=\"me-auto\">Success!</strong><small>Just now!</small></Toast.Header>\n          <Toast.Body>{'Contact updated!'}</Toast.Body>\n        </Toast>\n        </ToastContainerWithZindex>\n    <StyledUl>\n      {isFetching && <MainLoaderSpinner />}\n      {contacts &&\n        !isFetching &&\n        filteredContacts.map(contact => {\n          return <ListItem key={contact.id} {...contact} passDeletedContactInfoForToast={passDeletedContactInfoForToast} passUpdatedContactInfoForToast={ passUpdatedContactInfoForToast}/>;\n        })}\n      {(!contacts || contacts.length === 0) && !isFetching && <Notification />}\n      </StyledUl>\n      </>\n  );\n};\n\nexport default List;\n","import ContactForm from \"../components/Form\";\nimport Filter from \"../components/Filter\";\nimport List from \"../components/List\";\n\nconst MainContentPage = () => { \n \n  return <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n    <List/></>\n};\n\nexport default MainContentPage;"],"names":["StyledButton","styled","Button","ToastContainerWithZindex","ToastContainer","useState","name","setName","number","setNumber","contacts","useGetAllContactsQuery","data","useCreateContactMutation","createContact","isLoading","contactCreatedToast","setContactCreatedToast","nameForToast","setNameForToast","onSameNameForToast","setOnSameNameForToast","onSameNumberForToast","setOnSameNumberForToast","onFormSubmit","find","toLowerCase","onSameName","onSamePhoneNumber","onInputHandler","e","currentTarget","value","reset","position","Toast","bg","onClose","show","delay","autohide","className","Form","onSubmit","preventDefault","controlId","placeholder","type","pattern","title","required","onChange","variant","disabled","color","height","width","getFilter","state","filter","dispatch","useDispatch","useSelector","useGetContactsByNameQuery","skip","changeFilter","StyledNotification","Li","StyledCard","Card","StyledCardTitle","StyledCardBody","StyledCardText","StyledModalButton","id","passDeletedContactInfoForToast","passUpdatedContactInfoForToast","useDeleteContactMutation","deleteContact","isDeleting","useUpdateContactMutation","updateContact","newName","setNewName","newNumber","setNewNumber","isShown","setIsshown","toggleModal","Modal","onHide","size","centered","closeButton","onClick","clearFilter","Div","Spinner","animation","StyledUl","isFetching","deletedContactForToast","setDeletedContactForToast","shouldUpdateForToast","setShouldUpdateForToast","filteredContacts","normalizedFilter","contact","includes","getFilteredContacts","info","map","length"],"sourceRoot":""}