{"version":3,"file":"static/js/432.2e0d2e89.chunk.js","mappings":"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","sources":["pages/RegisterPage.jsx","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authOperations } from '../redux/auth';\nimport { authSelectors } from \"../redux/auth\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Alert from 'react-bootstrap/Alert';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\ndisplay: flex;\njustify-content: center;\nmax-width: 50%;\nmargin: 0 auto;`;\n\nconst WidthDiv = styled.div`\nwidth: 100%`;\n\nconst CenteredHeader = styled.h1`\ntext-align: center`;\n\nconst ButtonDiv = styled.div`\nmargin-top: 1rem;`;\n\nconst AlertDiv = styled.div`\nmargin-top: 1rem;`;\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const isRegisterEmailAlertShown = useSelector(authSelectors.getIsRegisterEmailAlertShown);\n    const isRegisterPasswordAlertShown = useSelector(authSelectors.getIsRegisterPasswordAlertShown);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        setName('');\n        setEmail('');\n        setPassword('');\n        \n    }\n\n    return (\n        <StyledDiv>\n            <WidthDiv>\n                <CenteredHeader>Register</CenteredHeader>\n                    \n                <Form style={{margin: '0 auto'} } onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\"> \n                      <FloatingLabel\n    controlId=\"floatingName\"\n    label=\"Name\"\n    className=\"mb-3\"><Form.Control required placeholder=\"Enter name\" type=\"text\" name=\"name\" value={name} onChange={handleChange} /></FloatingLabel>\n                      \n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                      <FloatingLabel\n    controlId=\"floatingEmail\"\n    label=\"Email\"\n    className=\"mb-3\"><Form.Control required placeholder=\"Enter email\" type=\"text\" name=\"email\" value={email} onChange={handleChange} /></FloatingLabel>\n                      \n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                      <FloatingLabel controlId=\"floatingPassword\" label=\"Password\"><Form.Control required placeholder=\"Enter password\" type=\"password\" name=\"password\" value={password} onChange={handleChange} /></FloatingLabel>\n                      \n                    </Form.Group>\n                    <Form.Text id=\"passwordHelpBlock\" muted>\n    Your password must be at least 7 characters long.\n                    </Form.Text>\n                    <ButtonDiv className=\"d-grid gap-2\">\n                      <Button size=\"lg\" variant=\"primary\" type=\"submit\">Register</Button>\n                    </ButtonDiv>    \n                </Form>\n                {isRegisterEmailAlertShown && <AlertDiv><Alert variant=\"danger\">This email is already have an account here. Try another email for registration or Log In with the existing one.</Alert></AlertDiv>}\n                {isRegisterPasswordAlertShown && <AlertDiv><Alert variant=\"danger\">Your password is shorter than the minimum allowed length (7).</Alert></AlertDiv>}\n            </WidthDiv>\n        </StyledDiv>\n    )\n}\n\nexport default RegisterPage;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["StyledDiv","styled","WidthDiv","CenteredHeader","ButtonDiv","AlertDiv","dispatch","useDispatch","isRegisterEmailAlertShown","useSelector","authSelectors","isRegisterPasswordAlertShown","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","style","margin","onSubmit","e","preventDefault","authOperations","className","controlId","label","required","placeholder","type","onChange","id","muted","size","variant","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading"],"sourceRoot":""}