{"version":3,"file":"static/js/432.f7e20280.chunk.js","mappings":"6QAUMA,EAAYC,EAAAA,GAAAA,IAAH,kGAMTC,EAAWD,EAAAA,GAAAA,IAAH,mCAGRE,EAAiBF,EAAAA,GAAAA,GAAH,0CAGdG,EAAYH,EAAAA,GAAAA,IAAH,yCAGTI,EAAWJ,EAAAA,GAAAA,IAAH,yCAuEd,UApEqB,WACjB,IAAMK,GAAWC,EAAAA,EAAAA,MACXC,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,8BACxCC,GAA+BF,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,iCACjD,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACpC,OAAQR,GACJ,IAAK,OACD,OAAOC,EAAQO,GACnB,IAAK,QACD,OAAOL,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GACvB,QACI,SAaZ,OACI,SAACrB,EAAD,WACI,UAACE,EAAD,YACI,SAACC,EAAD,wBAEA,UAAC,IAAD,CAAMmB,MAAO,CAACC,OAAQ,UAAYC,SAdzB,SAAAC,GACjBA,EAAEC,iBACFpB,EAASqB,EAAAA,GAAAA,SAAwB,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASJ,WACI,SAAC,UAAD,CAAYU,UAAU,OAAOC,UAAU,gBAAvC,UACE,SAAC,IAAD,CAClBA,UAAU,eACVC,MAAM,OACNF,UAAU,OAHQ,UAGD,SAAC,YAAD,CAAcG,UAAQ,EAACC,YAAY,aAAaC,KAAK,OAAOpB,KAAK,OAAOQ,MAAOR,EAAMqB,SAAUf,SAGhG,SAAC,UAAD,CAAYS,UAAU,OAAOC,UAAU,iBAAvC,UACE,SAAC,IAAD,CAClBA,UAAU,gBACVC,MAAM,QACNF,UAAU,OAHQ,UAGD,SAAC,YAAD,CAAcG,UAAQ,EAACC,YAAY,cAAcC,KAAK,OAAOpB,KAAK,QAAQQ,MAAON,EAAOmB,SAAUf,SAGnG,SAAC,UAAD,CAAYS,UAAU,OAAOC,UAAU,oBAAvC,UACE,SAAC,IAAD,CAAeA,UAAU,mBAAmBC,MAAM,WAAlD,UAA6D,SAAC,YAAD,CAAcC,UAAQ,EAACC,YAAY,iBAAiBC,KAAK,WAAWpB,KAAK,WAAWQ,MAAOJ,EAAUiB,SAAUf,SAG9K,SAAC,SAAD,CAAWgB,GAAG,oBAAoBC,OAAK,EAAvC,gEAGA,SAAChC,EAAD,CAAWwB,UAAU,eAArB,UACE,SAAC,IAAD,CAAQS,KAAK,KAAKC,QAAQ,UAAUL,KAAK,SAAzC,2BAGLzB,IAA6B,SAACH,EAAD,WAAU,SAAC,IAAD,CAAOiC,QAAQ,SAAf,+HACvC3B,IAAgC,SAACN,EAAD,WAAU,SAAC,IAAD,CAAOiC,QAAQ,SAAf","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authOperations } from '../redux/auth';\nimport { authSelectors } from \"../redux/auth\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Alert from 'react-bootstrap/Alert';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\ndisplay: flex;\njustify-content: center;\nmax-width: 50%;\nmargin: 0 auto;`;\n\nconst WidthDiv = styled.div`\nwidth: 100%`;\n\nconst CenteredHeader = styled.h1`\ntext-align: center`;\n\nconst ButtonDiv = styled.div`\nmargin-top: 1rem;`;\n\nconst AlertDiv = styled.div`\nmargin-top: 1rem;`;\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch();\n    const isRegisterEmailAlertShown = useSelector(authSelectors.getIsRegisterEmailAlertShown);\n    const isRegisterPasswordAlertShown = useSelector(authSelectors.getIsRegisterPasswordAlertShown);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        setName('');\n        setEmail('');\n        setPassword('');\n        \n    }\n\n    return (\n        <StyledDiv>\n            <WidthDiv>\n                <CenteredHeader>Register</CenteredHeader>\n                    \n                <Form style={{margin: '0 auto'} } onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\"> \n                      <FloatingLabel\n    controlId=\"floatingName\"\n    label=\"Name\"\n    className=\"mb-3\"><Form.Control required placeholder=\"Enter name\" type=\"text\" name=\"name\" value={name} onChange={handleChange} /></FloatingLabel>\n                      \n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                      <FloatingLabel\n    controlId=\"floatingEmail\"\n    label=\"Email\"\n    className=\"mb-3\"><Form.Control required placeholder=\"Enter email\" type=\"text\" name=\"email\" value={email} onChange={handleChange} /></FloatingLabel>\n                      \n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                      <FloatingLabel controlId=\"floatingPassword\" label=\"Password\"><Form.Control required placeholder=\"Enter password\" type=\"password\" name=\"password\" value={password} onChange={handleChange} /></FloatingLabel>\n                      \n                    </Form.Group>\n                    <Form.Text id=\"passwordHelpBlock\" muted>\n    Your password must be at least 7 characters long.\n                    </Form.Text>\n                    <ButtonDiv className=\"d-grid gap-2\">\n                      <Button size=\"lg\" variant=\"primary\" type=\"submit\">Register</Button>\n                    </ButtonDiv>    \n                </Form>\n                {isRegisterEmailAlertShown && <AlertDiv><Alert variant=\"danger\">This email is already have an account here. Try another email for registration or Log In with the existing one.</Alert></AlertDiv>}\n                {isRegisterPasswordAlertShown && <AlertDiv><Alert variant=\"danger\">Your password is shorter than the minimum allowed length (7).</Alert></AlertDiv>}\n            </WidthDiv>\n        </StyledDiv>\n    )\n}\n\nexport default RegisterPage;"],"names":["StyledDiv","styled","WidthDiv","CenteredHeader","ButtonDiv","AlertDiv","dispatch","useDispatch","isRegisterEmailAlertShown","useSelector","authSelectors","isRegisterPasswordAlertShown","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","style","margin","onSubmit","e","preventDefault","authOperations","className","controlId","label","required","placeholder","type","onChange","id","muted","size","variant"],"sourceRoot":""}