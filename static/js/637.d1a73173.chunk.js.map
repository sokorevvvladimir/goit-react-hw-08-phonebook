{"version":3,"file":"static/js/637.d1a73173.chunk.js","mappings":"2QAUMA,EAAYC,EAAAA,GAAAA,IAAH,gEAITC,EAAiBD,EAAAA,GAAAA,GAAH,0CAGdE,EAAYF,EAAAA,GAAAA,IAAH,yCAGTG,EAAWH,EAAAA,GAAAA,IAAH,yCA0Dd,UAvDkB,WACd,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAoBC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,sBACtC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACpC,OAAQD,GACJ,IAAK,QACD,OAAOL,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SAaZ,OACI,SAAClB,EAAD,WACA,4BACI,SAACE,EAAD,sBAEA,UAAC,IAAD,CAAMiB,SAdO,SAAAC,GACjBA,EAAEC,iBACFhB,EAASiB,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAUR,WACI,SAAC,UAAD,CAAYS,UAAU,OAAOC,UAAU,iBAAvC,UACE,SAAC,IAAD,CACdA,UAAU,gBACVC,MAAM,QACNF,UAAU,OAHI,UAGG,SAAC,YAAD,CAAcG,UAAQ,EAACC,YAAY,cAAcC,KAAK,OAAOX,KAAK,QAAQC,MAAOP,EAAOkB,SAAUd,SAGvG,SAAC,UAAD,WACE,SAAC,IAAD,CAAeS,UAAU,mBAAmBC,MAAM,WAAlD,UAA6D,SAAC,YAAD,CAAcC,UAAQ,EAACC,YAAY,iBAAiBC,KAAK,WAAWX,KAAK,WAAWC,MAAOL,EAAUgB,SAAUd,SAG1K,SAACZ,EAAD,CAAWoB,UAAU,eAArB,UACE,SAAC,IAAD,CAAQO,KAAK,KAAKC,QAAQ,UAAUH,KAAK,SAAzC,yBAGLrB,IAAqB,SAACH,EAAD,WAAU,SAAC,IAAD,CAAO2B,QAAQ,SAAf","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authOperations } from '../redux/auth';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport styled from 'styled-components';\nimport { authSelectors } from \"../redux/auth\";\nimport Alert from 'react-bootstrap/Alert';\n\nconst StyledDiv = styled.div`\ndisplay: flex;\njustify-content: center;`;\n\nconst CenteredHeader = styled.h1`\ntext-align: center`;\n\nconst ButtonDiv = styled.div`\nmargin-top: 1rem;`;\n\nconst AlertDiv = styled.div`\nmargin-top: 1rem;`;\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n    const isLogInAlertShown = useSelector(authSelectors.getIsLogInAlertShown);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    \n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(authOperations.login({ email, password }));\n        setEmail('');\n        setPassword('');\n        \n    };\n\n\n    return (\n        <StyledDiv>\n        <div>\n            <CenteredHeader>Log In</CenteredHeader>\n\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <FloatingLabel\n    controlId=\"floatingEmail\"\n    label=\"Email\"\n    className=\"mb-3\"><Form.Control required placeholder=\"Enter email\" type=\"text\" name=\"email\" value={email} onChange={handleChange} /></FloatingLabel>   \n                  \n                </Form.Group>\n                <Form.Group>\n                  <FloatingLabel controlId=\"floatingPassword\" label=\"Password\"><Form.Control required placeholder=\"Enter password\" type=\"password\" name=\"password\" value={password} onChange={handleChange} /></FloatingLabel>\n                  \n                    </Form.Group>\n                    <ButtonDiv className=\"d-grid gap-2\">\n                      <Button size=\"lg\" variant=\"primary\" type=\"submit\">Log In</Button>\n                   </ButtonDiv>\n                </Form>\n                {isLogInAlertShown && <AlertDiv><Alert variant=\"danger\">Wrong email or password!</Alert></AlertDiv>}\n            </div>\n            \n        </StyledDiv>\n    )\n\n    \n}\nexport default LoginPage;"],"names":["StyledDiv","styled","CenteredHeader","ButtonDiv","AlertDiv","dispatch","useDispatch","isLogInAlertShown","useSelector","authSelectors","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","authOperations","className","controlId","label","required","placeholder","type","onChange","size","variant"],"sourceRoot":""}